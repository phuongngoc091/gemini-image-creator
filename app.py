import streamlit as st
import google.generativeai as genai
from PIL import Image
from io import BytesIO

# --- C·∫•u h√¨nh trang web ---
st.set_page_config(
    page_title="Tr√¨nh t·∫°o ·∫£nh AI b·∫±ng Gemini",
    page_icon="üé®",
    layout="wide"
)

# --- Giao di·ªán ch√≠nh ---
st.title("üé® Tr√¨nh t·∫°o ·∫£nh AI b·∫±ng Gemini 1.5 Flash")
st.write("M√¥ t·∫£ √Ω t∆∞·ªüng c·ªßa b·∫°n th√†nh l·ªùi vƒÉn, AI s·∫Ω bi·∫øn n√≥ th√†nh h√¨nh ·∫£nh!")

# --- Ph·∫ßn c·∫•u h√¨nh API Key ·ªü thanh b√™n (sidebar) ---
with st.sidebar:
    st.header("C·∫•u h√¨nh")
    # L·∫•y API Key t·ª´ Streamlit secrets, m·ªôt c√°ch an to√†n
    try:
        # H∆∞·ªõng d·∫´n ng∆∞·ªùi d√πng c√°ch deploy ƒë·ªÉ c√≥ st.secrets
        # ƒê√¢y l√† c√°ch t·ªët nh·∫•t khi deploy
        google_api_key = st.secrets["GOOGLE_API_KEY"]
        st.success("ƒê√£ t√¨m th·∫•y API Key!", icon="‚úÖ")
    except (FileNotFoundError, KeyError):
        # N·∫øu kh√¥ng c√≥ secret, y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p th·ªß c√¥ng
        st.warning("Kh√¥ng t√¨m th·∫•y API Key trong Secrets. Vui l√≤ng nh·∫≠p th·ªß c√¥ng b√™n d∆∞·ªõi.", icon="‚ö†Ô∏è")
        google_api_key = st.text_input("Nh·∫≠p Google API Key c·ªßa b·∫°n:", type="password")

# Ki·ªÉm tra n·∫øu API key ch∆∞a ƒë∆∞·ª£c cung c·∫•p
if not google_api_key:
    st.info("Vui l√≤ng nh·∫≠p API Key c·ªßa b·∫°n ·ªü thanh b√™n ƒë·ªÉ b·∫Øt ƒë·∫ßu.")
    st.stop()

# C·∫•u h√¨nh API c·ªßa Google
try:
    genai.configure(api_key=google_api_key)
except Exception as e:
    st.error(f"L·ªói c·∫•u h√¨nh API Key: {e}")
    st.stop()


# --- Form nh·∫≠p li·ªáu ---
with st.form("image_form"):
    prompt = st.text_area(
        "üìù **Nh·∫≠p m√¥ t·∫£ cho b·ª©c ·∫£nh (b·∫±ng ti·∫øng Anh ƒë·ªÉ c√≥ k·∫øt qu·∫£ t·ªët nh·∫•t):**",
        height=150,
        placeholder="A cat astronaut riding a rocket through the rings of Saturn, oil painting style"
    )
    submitted = st.form_submit_button("‚ú® T·∫°o ·∫£nh")

# --- X·ª≠ l√Ω khi ng∆∞·ªùi d√πng nh·∫•n n√∫t ---
if submitted:
    if not prompt:
        st.warning("Vui l√≤ng nh·∫≠p m√¥ t·∫£ cho ·∫£nh.")
    else:
        # Hi·ªÉn th·ªã spinner trong khi ch·ªù t·∫°o ·∫£nh
        with st.spinner("ü§ñ AI ƒëang s√°ng t·∫°o, vui l√≤ng ch·ªù trong gi√¢y l√°t..."):
            try:
                # Ch·ªçn model v√† g·ªçi API
                model = genai.GenerativeModel(model_name="gemini-1.5-flash")
                response = model.generate_content(
                    prompt,
                    generation_config={"response_mime_type": "image/jpeg"}
                )

                # X·ª≠ l√Ω v√† hi·ªÉn th·ªã ·∫£nh
                image_data = response.parts[0].blob.data
                image = Image.open(BytesIO(image_data))

                st.success("T·∫°o ·∫£nh th√†nh c√¥ng!", icon="üéâ")
                st.image(image, caption=f"·∫¢nh t·∫°o t·ª´ m√¥ t·∫£: '{prompt}'", use_column_width=True)

                # Th√™m n√∫t t·∫£i xu·ªëng
                st.download_button(
                    label="T·∫£i ·∫£nh xu·ªëng",
                    data=image_data,
                    file_name=f"{prompt[:30].replace(' ', '_')}.jpg",
                    mime="image/jpeg"
                )

            except Exception as e:
                st.error(f" R·∫•t ti·∫øc, ƒë√£ x·∫£y ra l·ªói: {e}")
                st.error("Nguy√™n nh√¢n c√≥ th·ªÉ do y√™u c·∫ßu c·ªßa b·∫°n vi ph·∫°m ch√≠nh s√°ch an to√†n ho·∫∑c API key kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i v·ªõi m·ªôt m√¥ t·∫£ kh√°c.")
